# (c) 2020 Amazon Web Services, Inc. or its affiliates. All Rights Reserved. This AWS Content
# is provided subject to the terms of the AWS Customer Agreement available at
# https://aws.amazon.com/agreement/ or other written agreement between Customer
# and Amazon Web Services, Inc.

AWSTemplateFormatVersion: '2010-09-09'
Description: "AWS CloudFormation template to set up Auto-rotation function for AWS IAM Access Keys."

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Configure the Deployment
        Parameters:
          - S3BucketName
          - S3BucketPrefix

    ParameterLabels:
      # Deployment Configuration
      S3BucketName:
        default: CloudFormation S3 Bucket Name
      S3BucketPrefix:
        default: CloudFormation S3 Bucket Prefix


Parameters:
  S3BucketName:
    Description: S3 Bucket Name where code is located.
    Type: String

  S3BucketPrefix:
    Description: The prefix or directory where resources will be stored.
    Type: String
    Default: "iam-rotation"

Resources:

  # IAM KEY ROTATION RESOURCES
  RotationLambdaFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowExecutionPermissionsOnFunction
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - events.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: AllowRotationFunctionPermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${S3BucketName}/*"
              - Effect: Allow
                Action:
                  - iam:List*
                  - iam:CreatePolicy
                  - iam:CreateAccessKey
                  - iam:DeleteAccessKey
                  - iam:UpdateAccessKey
                  - iam:PutUserPolicy
                  - iam:GetUserPolicy
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:AttachUserPolicy
                Resource:
                  - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:user/*"
              - Effect: Allow
                Action:
                  - secretsmanager:PutResourcePolicy
                  - secretsmanager:PutSecretValue
                  - secretsmanager:DescribeSecret
                  - secretsmanager:CreateSecret
                  - secretsmanager:GetResourcePolicy
                Resource:
                  - !Sub "arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*"

  RotationAccessKeyRotateLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Rotates IAM Access Keys on specified schedule
      FunctionName: IAM-Access-Key-Rotation-LambdaFunctionName
      Handler: main.lambda_handler
      Runtime: python3.8
      Role: !GetAtt RotationLambdaFunctionExecutionRole.Arn
      Timeout: 240
      Environment:
        Variables:
          RotationPeriod: 90
          InactivePeriod: 100
          RetentionPeriod: 110
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: !Sub ${S3BucketPrefix}/access_key_auto_rotation_0.83.0.zip

  RotationCloudWatchEventLambdaTrigger:
    Type: AWS::Events::Rule
    DependsOn:
      - RotationLambdaFunctionExecutionRole
    Properties:
      Description: CloudWatch Event to trigger Access Key auto-rotation Lambda Function daily
      ScheduleExpression: rate(24 hours)
      State: ENABLED
      Targets:
        - Arn: !GetAtt RotationAccessKeyRotateLambdaFunction.Arn
          Id: AccessKeyRotationFunction
      
  RotationCloudWatchEventLambdaTriggerLambdaPermissions:
    Type: AWS::Lambda::Permission
    DependsOn: RotationCloudWatchEventLambdaTrigger
    Properties:
      FunctionName: !Ref RotationAccessKeyRotateLambdaFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt RotationCloudWatchEventLambdaTrigger.Arn